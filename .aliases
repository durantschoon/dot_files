# -*- mode: sh; -*-

# NOTES:
#
# Idea to check a file by Paul Merrill (July 10, 2015)
#
# if on home computer,
#   echo See ~/.aliases for the use of this file >> ~/.HOME
#
# if on work computer,
#   echo See ~/.aliases for the use of this file >> ~/.WORK

###############################################################################
# Bash Aliases
###############################################################################

alias a='alias'
alias ag='alias | grep'
alias c2n='tr ":" "\012"'
alias cx='chmod +x'
alias dm='docker-machine'
alias ds='echo -e "\e[3mExample: use -2 to switch to the directory 2 down\e[0m"; dirs -v'
alias eg=egrep
alias g=grep
alias gv='grep -v'
alias git_email='echo Your git email is `git config user.email`'
alias git_id_help='git_email; echo Check your git_id aliases for more info which are set in .private_aliases.'
alias h=history
alias hg='history | grep'
alias ipy=ipython
alias ipn='ipython notebook'
alias ll='ls -l'
alias m='less'
alias md='mkdir -p'
alias ms='make shell'
alias mt='make test'
alias nrun='npm run'
alias nrt='echo npm run test; npm run test'
alias path='echo $PATH | c2n'
alias pp='popd; ds'
alias port_scan='lsof -nP +c 15 | { head -1; grep LISTEN; } ' # mac only?
alias py="echo 'Using ipython instead, duh' ; ipython"
alias pylint="pylint --output-format=colorized"
alias s.a='source ~/.aliases'
alias s.b='source ~/.bashrc'
alias s2n='tr " " "\012"'
alias sg='set | grep'
alias spew='wget -qO-' # URL to spew the contents to stdout
alias up='cd ..'
alias up2='cd ../..'
alias up3='cd ../../..'
alias up4='cd ../../../..'
alias wh=which
alias wo=workon
alias ,=pd
alias ,.=pp

# -----------------------------------------------------------------------------
# Docker Aliases
# -----------------------------------------------------------------------------

# MacOS prerequisites
#  brew install xquartz
#  open -a XQuartz
# in xterm
#  xhost +127.0.0.1
#  docker run -it --rm bigdeddu/nyxt:2.2.4

# -----------------------------------------------------------------------------
# OS Specific Aliases
# -----------------------------------------------------------------------------

if [[ "$(uname)" == "Darwin" ]]; then

    alias oemacs='open -a /Applications/Emacs.app'
    alias ssh_fingerprint='ssh-keygen -E SHA256 -lf'
    alias gitk=git-gui # brew install git-gui
    # get gtime with `brew install gnu-time`
    alias backup='cd ~/DuroData/MacOS/UsersOLD/backup/rsync_mac/backup; \
        sudo /usr/local/bin/gtime --format="%C ran for %E (%e seconds)" -p ./2TB_BACKUP.command \
        # echo "if compaudit errors, run yes | sudo /usr/..."'

elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then
    # Do something under Linux platform
    alias ssh_fingerprint='ssh-keygen -E md5 -l'

#elif [[ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]]; then
    # Do something under Windows NT platform

    alias cmake='/mnt/c/Program\ Files/CMake/bin/cmake.exe'

    # here's a funky way to tell if I'm on windows WSL
    if  [[ $(whoami) == root ]]; then
        alias llhome='ll -L | egrep -v '\''(NTUSER|ntuser)'\'
        alias llhomea='ll -aL | egrep -v '\''(NTUSER|ntuser)'\'
        alias cdhome='cd ~/wsl_user; ll -L | egrep -v '\''(NTUSER|ntuser)'\' # ~/wsl_user is a link to my user dir
    fi
fi

# -----------------------------------------------------------------------------
# Private aliases
# -----------------------------------------------------------------------------

if [ -e ~/.private_aliases ]; then
    alias s.a='source ~/.aliases; source ~/.private_aliases'
    source ~/.private_aliases
fi

# -----------------------------------------------------------------------------
# Aliases at home
# -----------------------------------------------------------------------------

if [ -e ~/.HOME ]; then
    alias proj='cd ~/Programming/PROJECTS'
    alias dox='cd ~/Documents'
    alias blog='cd ~/Documents/Blog'
fi

# -----------------------------------------------------------------------------
# Aliases for work (private repo to protect employer)
# -----------------------------------------------------------------------------

[[ -f ~/dot_aliases/dot_aliases ]] && source ~/dot_aliases/dot_aliases # bitbucket

###############################################################################
# Zsh Aliases
###############################################################################

if [ -n "$ZSH_VERSION" ]; then
    # assume Zsh

    alias ctags='=ctags -eR'

    alias funcs='print -l ${(ok)functions}' # list all functions

    alias s.z='source ~/.zshrc'
    alias s.ze='source ~/.zshenv'
    alias s.zh='source ~/dot_files/.home.zshrc'
    alias s.zp='source ~/.zprofile'
    alias s.zw='source ~/dot_files/.work.zshrc'
    alias s.zall="s.ze && echo '~/.zshenv'; [ -f ~/.zprofile ] && s.zp && echo '~/.zprofile'; s.z && echo '~/.zshrc'"
    alias lth='ls -lt | head; latest=`ls *(.om[1])`'		# . regular file, o sorted, m mod time, 1 first
    alias lthd='ls -lt | head; latest=`ls -d *(/om[1])`'	# / directory, o sorted, m mod time, 1 first
    # z move?
    # zmv -W '*.lis' '*.txt'
    alias zmvw='zmv -W'

    # alias branches="glo | grep -E '\[[a-zA-Z0-9-]+\]'"

    # print the branches which are recognized by "git branchstack"
    branches () {
        glo | \
        perl -ne 's/\([^)]*\)//g; s/  +/ /g; print' | \
        perl -ne '@fields = split; if ($fields[1] =~ /\[[a-zA-Z0-9-]+\]/) { print }'
    }

    # try these
    alias -g latestd='*(/om[1])' # newest directory
    alias -g latestf='*(.om[1])' # newest file

    alias llrm='echo "Paste ls -lt output for files to delete and ^D when done"; /bin/rm -rf `awk '\''{print $9}'\''`'

    ee () { echo $* ; $* }

    # nr () { echo "npm run $*" ; npm run $* }

    [[ -f /Users/durant/.pyenv/shims/python ]] && alias python3=/Users/durant/.pyenv/shims/python

    alias heroku_logs='heroku logs --force-colors --tail --app'
    alias heroku_logs24='heroku_logs tallyfor-backend-prod-inst24'
    alias heroku_config24='heroku config --app tallyfor-backend-prod-inst24'

    # _heroku_logs_completions() {
    #     local -a apps
    #     # apps=("${(f)$(heroku apps | awk '/^[^=]/ {print $1}')}")


    #     apps=(\"app1\" \"app2\" \"app3\")


    #     echo "Apps found: ${apps[@]}"  # Debugging: List all apps found
    #     compadd "$@" -- $apps
    # }
    # compdef _heroku_logs_completions heroku_logs

    # export XDG_CACHE_HOME="$HOME/.cache"
    # [[ ! -d "$XDG_CACHE_HOME/zsh" ]] && mkdir -p "$XDG_CACHE_HOME/zsh"
    # [[ ! -f "$XDG_CACHE_HOME/zsh/.zcompcache" ]] && touch "$XDG_CACHE_HOME/zsh/.zcompcache"

    # zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/.zcompcache"
    # zstyle ':completion:*' use-cache on

    # remove milliseconds
    epoch_date () { date -r $(echo $1 | cut -c1-10); } # epoch_date 1679656475630
    epoch_date2 () { date -r $(echo $1 | cut -c1-10) +'%Y-%m-%d %H:%M:%S'; }

    rm() { [[ "$(uname)" == "Darwin" ]] && (mv $* ~/.Trash) || =rm $* } # builtin rm

    function killport(){ lsof -nti:$1 | xargs kill -9 } # killport 3000

    function rg () {
        [[ -d .git/ ]] && echo 'skipping .git/ dir ...';
        local arg=$1; shift
        =rg --hidden $arg -g '!.git/*' $@
    }
    function rg_with_git () { =rg --hidden $* }

    function psg () {
        ps -ef | grep "$@" | grep -v grep
    }

    function mdc () {
        mkdir -p $1
        cd $1
    }

    # alias pd='pushd; ds'
    function pd () {
        pushd $1
        ds
    }

    function p () {
        ls -d $PWD/$1
    }

    function pdfsearch() {
        pdfgrep -nir "$@" .
    }

    get_pids_from_port() {
        if [[ -z $1 ]]; then
            echo "Usage: get_pids_from_port <port_number>"
            return 1
        fi

        local port=$1
        local pids=$(lsof -t -i :$port)

        if [[ -z $pids ]]; then
            echo "No processes found using port $port."
            return 1
        fi

        echo $pids
    }

    # Example usage:
    # pids=$(get_pids_from_port 8000)
    # echo $pids
    # kill -9 $pids
    # or
    # kill -9 $(get_pids_from_port 8000)

    # Example Usage: grep_git_branches clojure-term-colors
    grep_git_branches() {
        for branch in $(git branch | awk '{print $1}'); do # this $1 is escaped for awk
            echo "Branch: $branch\n" $(git grep $1 $(git rev-parse $branch)) "\n" # this $1 is the first argument
        done
    }

    # -----

    # spacemacs

    function switch_spacemacs() {
        local EMACS_D_LINK=$HOME/.emacs.d
        local EMACS_ORIG_D=$HOME/.emacs.d_ORIG_EMACS
        local SPACEMACS_D=$HOME/.emacs.d_SPACEMACS
        if [[ -d $EMACS_ORIG_D && -d $SPACEMACS_D && -h $EMACS_D_LINK ]]; then
            if [[ "$(readlink $EMACS_D_LINK)" == "$EMACS_ORIG_D" ]]; then
                =rm $EMACS_D_LINK
                ln -s $SPACEMACS_D $EMACS_D_LINK
                echo "Switched to spacemacs"
            elif [[ "$(readlink $EMACS_D_LINK)" == "$SPACEMACS_D" ]]; then
                =rm $EMACS_D_LINK
                ln -s $EMACS_ORIG_D $EMACS_D_LINK
                echo "Switched to original emacs"
            fi
        else
            echo "Not configured to test spacemacs"
        fi
    }

    # -----

    # $1 = type; 0 - both, 1 - tab, 2 - title
    # rest = text
    setTerminalText () {
        # echo works in bash & zsh
        local mode=$1 ; shift
        echo -ne "\033]$mode;$@\007"
    }
    stt_both  () { setTerminalText 0 $@; }
    stt_tab   () { setTerminalText 1 $@; }
    stt_title () { setTerminalText 2 $@; }

    # mac

    ###############################################################################
    # global aliases
    # example: C

    # from: http://grml.org/zsh/zsh-lovers.html

    # $latest alias -g C='| wc -l'
    # $ grep alias ~/.zsh/* C
    # 443

    alias -g ...='../..'
    alias -g ....='../../..'
    alias -g .....='../../../..'
    alias -g CA="2>&1 | cat -A"
    alias -g C='| wc -l'
    alias -g D="DISPLAY=:0.0"
    alias -g DN=/dev/null
    alias -g ED="export DISPLAY=:0.0"
    alias -g EG='|& egrep'
    alias -g EH='|& head'
    alias -g EL='|& less'
    alias -g ELS='|& less -S'
    alias -g ETL='|& tail -20'
    alias -g ET='|& tail'
    alias -g F=' | fmt -'
    alias -g G='| egrep'
    alias -g H='| head'
    alias -g HL='|& head -20'
    alias -g Sk="*~(*.bz2|*.gz|*.tgz|*.zip|*.z)"
    alias -g LL="2>&1 | less"
    alias -g L="| less"
    alias -g LS='| less -S'
    alias -g MM='| most'
    alias -g M='| more'
    alias -g NE="2> /dev/null"
    alias -g NS='| sort -n'
    alias -g NUL="> /dev/null 2>&1"
    alias -g PIPE='|'
    alias -g R=' > /c/aaa/tee.txt '
    alias -g RNS='| sort -nr'
    alias -g S='| sort'
    alias -g TL='| tail -20'
    alias -g T='| tail'
    alias -g US='| sort -u'
    alias -g VM=/var/log/messages
    alias -g X0G='| xargs -0 egrep'
    alias -g X0='| xargs -0' # see https://www.gnu.org/software/parallel instead of xargs
    # brew install parallel
    # on mac you need final - below
    # seq 1000 | parallel -N100 –pipe –slf instances "(hostname; wc -l) | paste -sd: - | bc"
    F0 () { find $* -print0 } # use F0 to pipe to X0 or X0G
    alias -g XG='| xargs egrep'
    alias -g X='| xargs'

# elif [ -n "$BASH_VERSION" ]; then
    # assume Bash
fi
